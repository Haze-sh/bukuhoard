#!/bin/env python
""" bukudhoarder, a 'hoarder' for buku bookmark manager """

import os, sys
from dotenv import load_dotenv
import asyncio
import buku
# import configargparse


# def parse_args(args):
#     """ parse from config files or command line """
#     conf_files = ['~/.config/bukuhoarder/*.conf']
#     parser = configargparse.ArgParser(default_config_files=conf_files)
#     parser.add('-c', '--config', is_config_file=True,
#                help='config file path')
#     parser.add('--client', required=True,
#                help='hoarder client')
#     parser.add('--token', required=True,
#                help='token')
#     args = parser.parse_args(args)
#     return args


def item_to_dict(b_item):
    """ put item to a dictionary """
    out = {
        'url': b_item[1],
        'title': b_item[2],
        'tags': sorted(b_item[3].split(',')[1:-1]),
        'timestamp': b_item[0]
    }

    return out


def sort_dict_items(item_list):
    """ sort dictionaries by timestamp """
    return sorted(item_list, key=lambda x: x['timestamp'])


def dict_list_difference(list1, list2):
    """ return items in list1 but not in list2 """
    return [i for i in list1 if i['url'] not in [j['url'] for j in list2]]


async def main() -> None:
    """ main function """

    load_dotenv()

    HOARDER_API_KEY = os.getenv('HOARDER_API_KEY')
    print(HOARDER_API_KEY)
    
    HOARDER_SERVER_ADDR = os.getenv('HOARDER_SERVER_ADDR')
    print(HOARDER_SERVER_ADDR)

    hoarder_all_bookmarks = os.system('hoarder bookmarks list --api-key ' + HOARDER_API_KEY + ' --server-addr ' + HOARDER_SERVER_ADDR)
    for dictionary in hoarder_all_bookmarks:
        dictionary['tags'] = dictionary.pop('tag_names')
        dictionary['timestamp'] = dictionary.pop('id')
    hoarder_all_bookmarks = sort_dict_items(hoarder_all_bookmarks)

#   print(hoarder_all_bookmarks, file=open('hoarder_all_bookmarks.txt', 'a'))
    count = 0
    for i in hoarder_all_bookmarks:
        count = count+1
    print('hoarder all bookmarks: ', count)

    bukudb = buku.BukuDb()
    buku_all_bookmarks = [item_to_dict(i) for i in bukudb.get_rec_all()]
    buku_all_bookmarks = sort_dict_items(buku_all_bookmarks)

#   print(buku_all_bookmarks, file=open('buku_all_bookmarks.txt', 'a'))
    count = 0
    for i in buku_all_bookmarks:
        count = count+1
    print('buku all bookmarks: ', count)

    hoarder_new_bookmarks = dict_list_difference(
        buku_all_bookmarks, hoarder_all_bookmarks)

#   print(hoarder_new_bookmarks, file=open('hoarder_new_bookmarks.txt', 'a'))
    count = 0
    for i in hoarder_new_bookmarks:
        count = count+1
    print('hoarder new bookmarks: ', count)

    buku_new_bookmarks = dict_list_difference(
        hoarder_all_bookmarks, buku_all_bookmarks)

#   print(buku_new_bookmarks, file=open('buku_new_bookmarks.txt', 'a'))
    count = 0
    for i in buku_new_bookmarks:
        count = count+1
    print('buku new bookmarks: ', count)

#    for buku_import in buku_new_bookmarks:
#        bukudb.add_rec(buku_import['url'],
#                       title_in=buku_import['website_title'],
#                       delay_commit=True, fetch=True)
#    bukudb.conn.commit()

    for i in hoarder_new_bookmarks:
        os.system('hoarder bookmarks add ' + i + ' --api-key ' + HOARDER_API_KEY + ' --server-addr ' + HOARDER_SERVER_ADDR)

asyncio.run(main())
